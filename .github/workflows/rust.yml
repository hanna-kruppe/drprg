name: Rust

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always
  V_JUST: '1.2'

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Format
        run: cargo fmt -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint
        run: cargo clippy --all-features --all-targets -- -D warnings
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: extractions/setup-just@v1
        with:
          just-version: ${{ env.V_JUST }}

      - uses: actions/cache@v2
        with:
          path: src/ext
          key: ${{ runner.os }}-ext-deps-${{ hashFiles('**/justfile') }}

      - name: Install external dependencies
        run: |
          if [ ! -d "src/ext" ]; then
            just deps
          fi

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: just test

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          just-version: ${{ env.V_JUST }}

      - uses: actions/cache@v2
        with:
          path: src/ext
          key: ${{ runner.os }}-ext-deps-${{ hashFiles('**/justfile') }}

      - name: Install external dependencies
        run: |
          if [ ! -d "src/ext" ]; then
            just deps
          fi

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.20.1'
          timeout: '300'
          args: '-- --test-threads 1'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml
